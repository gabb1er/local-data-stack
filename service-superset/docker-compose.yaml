x-superset-image: &superset-image apache/superset:4.1.1
x-superset-depends-on: &superset-depends-on
  - db
  - db-demo-data
  - redis
x-superset-volumes: &superset-volumes
  - ./docker:/app/docker
  - superset_app:/app/superset_home

services:
  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - superset_cache:/data

  db:
    env_file:
      - path: docker/.env # default
        required: true
    image: postgres:15
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - superset_db:/var/lib/postgresql/data
      - ./docker/db-init:/docker-entrypoint-initdb.d

  db-demo-data:  # database with demo data
    container_name: superset_db_demo_data
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
    volumes:
      - superset_demo_data:/var/lib/postgresql/data
      - ./docker/demo-data:/docker-entrypoint-initdb.d

  superset:
    env_file:
      - path: docker/.env # default
        required: true
    image: *superset-image
    container_name: superset_app
    command: /bin/bash -c "python3 -m pip install psycopg2-binary && /usr/bin/run-server.sh"
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    env_file:
      - path: docker/.env # default
        required: true
    image: *superset-image
    container_name: superset_init
    command: >
      /bin/bash -c "superset db upgrade &&
      superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password $${ADMIN_PASSWORD} &&
      superset init"
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["celery", "--app=superset.tasks.celery_app:app", "worker", "-O", "fair", "-l", "INFO", "--concurrency=2"]
    env_file:
      - path: docker/.env # default
        required: true
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      test: [
        "CMD-SHELL",
        "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
      ]

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: >
      /bin/bash -c "rm -f /tmp/celerybeat.pid &&
      celery --app=superset.tasks.celery_app:app beat --pidfile /tmp/celerybeat.pid -l INFO -s $${SUPERSET_HOME}/celerybeat-schedule"
    env_file:
      - path: docker/.env # default
        required: true
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

volumes:
  superset_app:
    external: false
  superset_db:
    external: false
  superset_cache:
    external: false
  superset_demo_data:
    external: false